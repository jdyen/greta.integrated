% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrated_data-class.R
\name{integrated_data}
\alias{integrated_data}
\alias{is.integrated_data}
\alias{print.integrated_data}
\alias{plot.integrated_data}
\alias{summary.integrated_data}
\title{An integrated data object}
\usage{
integrated_data(data, integrated_process, process_link,
  observation_model = "naive", settings = list())

is.integrated_data(model)

\method{print}{integrated_data}(x, ...)

\method{plot}{integrated_data}(x, ...)

\method{summary}{integrated_data}(object, ...)
}
\arguments{
\item{data}{something}

\item{integrated_process}{something}

\item{process_link}{something}

\item{observation_model}{something else}

\item{settings}{a named list of settings passed to data formatting functions (see details)}

\item{...}{additional arguments}
}
\value{
An object of class \code{integrated_data}, which contains information on the data module and
  can be passed to \link[integrated]{integrated_model}
}
\description{
\code{integrated_data} defines a data object with appropriate likelihood based on
 a process model defined with \link[integrated]{integrated_process}
}
\details{
Do something. The settings list can be used to specify how the data are binned, either with
  specific breaks for binning or with the number of breaks to use. If these are not provided, the 
  functions use the \code{classes} argument in the \code{integrated_process} to determine the number
  of bins (\code{nbreaks = classes + 1}).
}
\examples{

library(integrated)

# prepare an example model
data <- integrated_data()
                        
\dontrun{                 
# summarise data module
model
summary(model)
plot(model)
}

# check if an object is an integrated_data object
  
\dontrun{
is.integrated_data(model)
}

# Print information about an 'integrated_data' object

\dontrun{
print(x)
}

# Plot an 'integrated_data' object

\dontrun{
plot(x)
}

# Summarise an 'integrated_data' object

\dontrun{
summary(x)
}
}
